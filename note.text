console.log("current buttonValue", buttonValue);
console.log("firstOperand", firstOperand);
console.log("secondOperand", secondOperand);
console.log("selectedOperator", selectedOperator);
console.log("inputValue", inputValue);
console.log("");   




// -------- core logic of the calculator -----// 

1. Operation Structure:
    - operation requires num1, operator, and num2
    - assign to variables: num1, operator, num2

2. operate() Function:
    - call operate(num1, operator, num2)
    - the function will perform operation based on the operator 
    IMPORTANT(LOGIC): 
        1. can't press (=) before u have num1, operator, and num2
        2. if num1 exists, update num2 with input

    2. operate() evaluate one timer for each unique operator 
    - meaning if you have num1, operator, and num2 when you click on operator for the 2nd time, it won't do calculation
    - but will update operator if not the same operator. 

    3. -------- IMPORTANT NEW 1.0 -----
        1. 1st input requires a number, click on non-number button, will display nothing
        1st input goes to num1

        2. 2nd input require an operator

        3. 3rd input require a number, for num2

        after 1st iteration, repeat 2 and 3, as num1 will always be the accumulated value 

3. Displaying the Result
    display(num1) will update the screen

4. If a result is showing and user presses a digit, clear the result and start fresh

//----------- user interfaces ----------- // 

cal have basic buttons like 1-9, =, +, - , *, /, decimal , del, clear

1. when button clicked: 
  1. numbers should be accepted as num1 or num2
  2. the rest should be accepted as operator 

2. clear: reset all data num1, operator, and num2 & clear display
3. add keyboard support late on
4. delete, if num1 exist & num2, don't, delete num1, else delete num2

when mainscreen when miniscreen?
5. current input is reflected on mainscreen
6. previous input is reflected on historyscreen
    operations always show on historyscreen 
    we have two kinds:
    1. 3+
    2. = 3


// ------------- gotchas -------------------/

1. pop-up warning if user try to divide by 0
2. can't have more than 1 floated point




// num1 = ""
// num2 = ""
// operator = ""

// let buttonsContainer = document.querySelector(".buttons");
// let mainDisplay = document.querySelector(".display");
// let historyDisplayContainer = document.querySelector(".displayMini");
// let clearButton = document.querySelector(".clear");

----------------------------------------------------------------




// num1 = ""
// num2 = ""
// operator = ""

// let buttonsContainer = document.querySelector(".buttons");
// let mainDisplay = document.querySelector(".display");
// let historyDisplayContainer = document.querySelector(".displayMini");
// let clearButton = document.querySelector(".clear");


// buttonsContainer.addEventListener("click", function(e) {

    // let input = e.target

    // if input is clear:
        // clear()

    // else if input is delete:
        // delete(number)
        // display(number)

    // else if num1 & operator & num2 & input is (=)
        // operate(num1, operator, num2)
        // display()

    // else if input is (1-9), then
        // appendDigitToNumber(num1,num2)
        // display(num1)

    // else if input is (operator):
        //  operator = input
        //  updateHistoryDisplay(input, num1="")

// }


// appendDigitToNumber(num1,num2)
    // if operator is not assigned:
        // num1 += input (use string)
    // else: 
        // num2 += input (use string)


// operate(num1, operator, num2)
    // if operate = "+":
            // num 1 += num2

    // if operate = "-":
        // num1 -= num2

    // if operate = "*":
        // num1 *= num2

    // if operate = "รท":
        // num1 รท= num 2

    // if operate = "." and "." isn't in num1:
        // add a decimal 

    // num2 = ""
    // operator = ""


// display(num1)
    // mainDisplay.textcontent = `${display(num1)}`
   
// updateHistoryDisplay(input, num1)
    // if Number.isFinite(input):
    // historyDisplayContainer.textcontent = `${num1} ${operation}`

    // else: 
    // historyDisplayContainer.textcontent = `${operation} ${num1}`


// clear()
    // clean if button clicked
    // num1 = ""
    // num2 = ""
    // operator = "" 
    // updateHistoryDisplay("")
    // display("CLEARED!")

// delete(number)

    // if num1 and !num2
    // num1 = number.slice(0,-1)

    // else num1 and num2:
    // num2 = number.slice(0,-1)

   







